####

bless( {
  '_protocol' => 'HTTP/1.1',
  '_content' => '
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<SOAP-ENV:Envelope SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
<SOAP-ENV:Body>
<SOAPSDK1:ExecuteSearch xmlns:SOAPSDK1="http://tempuri.org/message/">
<bstrQueryIn>SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;ASSOCIAT&apos; AND PROPERTYSETTING=&apos;1&apos; AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;TYPE&apos;AND PROPERTYSETTING=&apos;test&apos; AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;SECURITY&apos;AND PROPERTYSETTING=&apos;Testsecurity&apos; AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;NAME&apos;AND PROPERTYSETTING=&apos;Test_Object&apos; AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;CREATED&apos;AND PROPERTYSETTING=&apos;2002-05-31 08:40:00&apos; AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;ENTITY&apos; AND PROPERTYSETTING=&apos;Test_entity&apos;  AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;DESCR&apos; AND PROPERTYSETTING=&apos;ObjectStore_Test&apos;  AND OBJECTGUID IN (SELECT DISTINCT OBJECTGUID FROM PROPERTIES WHERE PROPERTYID=&apos;COMP_KEY&apos; AND PROPERTYSETTING=&apos;Test_CompKey&apos; ))))))))</bstrQueryIn>
<bstrSearchHint>
</bstrSearchHint>
</SOAPSDK1:ExecuteSearch>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>',
  '_uri' => bless( do{\(my $o = 'http://localhost:8889/obs-cgi-bin/ObjStoreServer.exe')}, 'URI::http' ),
  '_headers' => bless( {
    'user-agent' => 'TrnsPort TestSuite-Relay/1.0',
    'soapaction' => '"http://tempuri.org/action/COBSObjectStore.ExecuteSearch"',
    'content-type' => 'text/xml; charset="UTF-8"',
    'content-length' => '1591',
    'host' => 'localhost:8889'
  }, 'HTTP::Headers' ),
  '_method' => 'POST'
}, 'HTTP::Request' )

